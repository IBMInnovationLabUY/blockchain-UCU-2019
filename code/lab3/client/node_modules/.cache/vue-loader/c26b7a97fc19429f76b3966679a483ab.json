{"remainingRequest":"/home/jpanizza/Desktop/ucu-blockchain/ibmcodeday19-blockchain/code/lab3/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jpanizza/Desktop/ucu-blockchain/ibmcodeday19-blockchain/code/lab3/client/src/components/CastBallot.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jpanizza/Desktop/ucu-blockchain/ibmcodeday19-blockchain/code/lab3/client/src/components/CastBallot.vue","mtime":1569348256638},{"path":"/home/jpanizza/Desktop/ucu-blockchain/ibmcodeday19-blockchain/code/lab3/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jpanizza/Desktop/ucu-blockchain/ibmcodeday19-blockchain/code/lab3/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PostsService from \"@/services/apiService\";\nimport VueInstantLoadingSpinner from \"vue-instant-loading-spinner/src/components/VueInstantLoadingSpinner.vue\";\n\nexport default {\n  name: \"response\",\n  data() {\n    return {\n      input: {},\n      picked: null,\n      response: null\n    };\n  },\n  components: {\n    VueInstantLoadingSpinner\n  },\n  methods: {\n    async castBallot() {\n      await this.runSpinner();\n\n      const electionRes = await PostsService.queryWithQueryString('election');\n\n      let electionId = electionRes.data[0].Key;\n\n      console.log(\"Seleccionado: \");\n      console.log(this.picked);\n      console.log(\"IdVotacion: \");\n      console.log(this.input.voterId);\n      this.response = null;\n\n \n\n      //error checking for making sure to vote for a valid party\n      if (this.picked === null ) {\n        console.log('this.picked === null')\n\n        let response = \"Debe seleccionar un candidato para poder votar!\";\n        this.response = response;\n        await this.hideSpinner();\n      \n      } else if (this.input.voterId === undefined) {\n        console.log('this.voterId === undefined')\n\n        let response = \"Debe ingresar su ID de votación para poder votar! \";\n        this.response = response;\n        await this.hideSpinner();\n\n      } else {\n\n        const apiResponse = await PostsService.castBallot(\n          electionId,\n          this.input.voterId,\n          this.picked\n        );\n\n        console.log('apiResponse: &&&&&&&&&&&&&&&&&&&&&&&');\n        console.log(apiResponse);\n\n        if (apiResponse.data.error) {\n          this.response= apiResponse.data.error;\n          await this.hideSpinner();\n        } else if (apiResponse.data.message) {\n          this.response= `No se encontro el ID de Votación: ${this.input.voterId}\n            . ¿Esta seguro de que ingreo un ID valido?`;\n          await this.hideSpinner();\n        } \n        else {\n          let response = `Voto enviado satisfactoriamente! Se realizo un voto al partido ${this.picked} emitido por el usuario ${apiResponse.data.voterId}. Gracias por cumplir con su deber ciudadano!`;\n\n          this.response = response;\n          console.log(this.input);\n          await this.hideSpinner();\n        }\n      }\n    },\n    async runSpinner() {\n      this.$refs.Spinner.show();\n    },\n    async hideSpinner() {\n      this.$refs.Spinner.hide();\n    }\n  }\n};\n",{"version":3,"sources":["CastBallot.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CastBallot.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"posts\">\n    <h1>Seleccionar Candidato</h1>\n    <input type=\"radio\" id=\"one\" value=\"Partido Nacional\" v-model=\"picked\">\n    <label for=\"one\">Luis Lacalle Pou (Partido Nacional)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"Frente Amplio\" v-model=\"picked\">\n    <label for=\"two\">Daniel Martinez (Frente Amplio)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"Partido Colorado\" v-model=\"picked\">\n    <label for=\"two\">Ernesto Talvi (Partido Colorado)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"Cabildo Abierto\" v-model=\"picked\">\n    <label for=\"two\">Guido Manini Rios (Cabildo Abierto)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"Partido de la Gente\" v-model=\"picked\">\n    <label for=\"two\">Edgardo Novik (Partido de la Gente)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"Unidad Popular\" v-model=\"picked\">\n    <label for=\"two\">Gonzalo Abella (Unidad Popular)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"Partido Verde Animalista\" v-model=\"picked\">\n    <label for=\"two\">Gustavo Salle (Partido Verde Animalista)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"Peri\" v-model=\"picked\">\n    <label for=\"two\">César Vega (P.E.R.I)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"Partido Independiente\" v-model=\"picked\">\n    <label for=\"two\">Pablo Mieres (Partido Independiente)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"Partido Digital\" v-model=\"picked\">\n    <label for=\"two\">Daniel Goldman (Partido Digital)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"Partido de losTrabajadores\" v-model=\"picked\">\n    <label for=\"two\">Rafel Fernández (Partido de los Trabajadores)</label>\n    <br>\n    <br>\n    <span v-if=\"picked\">\n      Seleccionado:\n      <b>{{ picked }}</b>\n    </span>\n    <br>\n    <br>\n    <form v-on:submit=\"castBallot\">\n      <input type=\"text\" v-model=\"input.voterId\" placeholder=\"Ingresar ID\">\n      <br>\n      <input type=\"submit\" value=\"Enviar Voto\">\n      <br>\n    </form>\n\n    <br>\n    <span v-if=\"response\">\n      <b>{{ response }}</b>\n    </span>\n    <br>\n    <vue-instant-loading-spinner id=\"loader\" ref=\"Spinner\"></vue-instant-loading-spinner>\n  </div>\n</template>\n\n<script>\nimport PostsService from \"@/services/apiService\";\nimport VueInstantLoadingSpinner from \"vue-instant-loading-spinner/src/components/VueInstantLoadingSpinner.vue\";\n\nexport default {\n  name: \"response\",\n  data() {\n    return {\n      input: {},\n      picked: null,\n      response: null\n    };\n  },\n  components: {\n    VueInstantLoadingSpinner\n  },\n  methods: {\n    async castBallot() {\n      await this.runSpinner();\n\n      const electionRes = await PostsService.queryWithQueryString('election');\n\n      let electionId = electionRes.data[0].Key;\n\n      console.log(\"Seleccionado: \");\n      console.log(this.picked);\n      console.log(\"IdVotacion: \");\n      console.log(this.input.voterId);\n      this.response = null;\n\n \n\n      //error checking for making sure to vote for a valid party\n      if (this.picked === null ) {\n        console.log('this.picked === null')\n\n        let response = \"Debe seleccionar un candidato para poder votar!\";\n        this.response = response;\n        await this.hideSpinner();\n      \n      } else if (this.input.voterId === undefined) {\n        console.log('this.voterId === undefined')\n\n        let response = \"Debe ingresar su ID de votación para poder votar! \";\n        this.response = response;\n        await this.hideSpinner();\n\n      } else {\n\n        const apiResponse = await PostsService.castBallot(\n          electionId,\n          this.input.voterId,\n          this.picked\n        );\n\n        console.log('apiResponse: &&&&&&&&&&&&&&&&&&&&&&&');\n        console.log(apiResponse);\n\n        if (apiResponse.data.error) {\n          this.response= apiResponse.data.error;\n          await this.hideSpinner();\n        } else if (apiResponse.data.message) {\n          this.response= `No se encontro el ID de Votación: ${this.input.voterId}\n            . ¿Esta seguro de que ingreo un ID valido?`;\n          await this.hideSpinner();\n        } \n        else {\n          let response = `Voto enviado satisfactoriamente! Se realizo un voto al partido ${this.picked} emitido por el usuario ${apiResponse.data.voterId}. Gracias por cumplir con su deber ciudadano!`;\n\n          this.response = response;\n          console.log(this.input);\n          await this.hideSpinner();\n        }\n      }\n    },\n    async runSpinner() {\n      this.$refs.Spinner.show();\n    },\n    async hideSpinner() {\n      this.$refs.Spinner.hide();\n    }\n  }\n};\n</script>\n"]}]}