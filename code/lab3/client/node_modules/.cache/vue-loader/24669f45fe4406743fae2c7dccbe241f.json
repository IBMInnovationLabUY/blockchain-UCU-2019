{"remainingRequest":"/home/jpanizza/Desktop/ucu-blockchain/ibmcodeday19-blockchain/code/lab3/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jpanizza/Desktop/ucu-blockchain/ibmcodeday19-blockchain/code/lab3/client/src/components/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jpanizza/Desktop/ucu-blockchain/ibmcodeday19-blockchain/code/lab3/client/src/components/Home.vue","mtime":1569348256638},{"path":"/home/jpanizza/Desktop/ucu-blockchain/ibmcodeday19-blockchain/code/lab3/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jpanizza/Desktop/ucu-blockchain/ibmcodeday19-blockchain/code/lab3/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PostsService from \"@/services/apiService\";\nimport VueInstantLoadingSpinner from \"vue-instant-loading-spinner/src/components/VueInstantLoadingSpinner.vue\";\n\nexport default {\n  name: \"response\",\n  data() {\n    return {\n      loginData: {},\n      registerData: {},\n      registerReponse: {\n        data: \"\"\n      },\n      loginReponse: {\n        data: \"\"\n      }\n    };\n  },\n  components: {\n    VueInstantLoadingSpinner\n  },\n  methods: {\n    async registerVoter() {\n\n      await this.runSpinner();\n      const apiResponse = await PostsService.registerVoter(\n        this.registerData.voterId,\n        this.registerData.registrarId,\n        this.registerData.firstName,\n        this.registerData.lastName\n      );\n\n      console.log(apiResponse);\n      this.registerReponse = apiResponse;\n      await this.hideSpinner();\n    },\n\n    async validateVoter() {\n      await this.runSpinner();\n\n      if (!this.loginData.voterId) {\n        console.log(\"!thislogin\");\n        let response = 'Ingrese su ID de votante';\n        this.loginReponse.data = response;\n        await this.hideSpinner();\n      } else {\n        const apiResponse = await PostsService.validateVoter(\n          this.loginData.voterId\n        );\n        console.log(\"apiResponse\");\n        console.log(apiResponse.data);\n\n        if (apiResponse.data.error) {\n          console.log(apiResponse.data.error);\n          this.loginReponse = apiResponse.data.error;\n        } else {\n          this.$router.push(\"castBallot\");\n        }\n\n        console.log(apiResponse);\n        this.loginReponse = apiResponse;\n        await this.hideSpinner();\n      }\n    },\n    async runSpinner() {\n      this.$refs.Spinner.show();\n    },\n    async hideSpinner() {\n      this.$refs.Spinner.hide();\n    }\n  }\n};\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"posts\">\n    <h1>Elecciones Presidenciales 2019</h1>\n    <h4>Si es un votante registrado, ingrese su ID de votante a continuaci√≥n</h4>\n    <form v-on:submit=\"validateVoter\">\n      <input type=\"text\" v-model=\"loginData.voterId\" placeholder=\"Ingresar ID\">\n      <br>\n\n      <input type=\"submit\" value=\"Ingresar\">\n      <br>\n      <br>\n      <span v-if=\"loginReponse\">\n        <b>{{ loginReponse.data }}</b>\n      </span>\n      <br>\n    </form>\n\n    <br>\n    <h4>De lo contrario, complete el siguiente formulario para registrarse.</h4>\n    <form v-on:submit=\"registerVoter\">\n      <input type=\"text\" v-model=\"registerData.voterId\" placeholder=\"Ingrese su Cedula de Identidad\">\n      <br>\n      <input type=\"text\" v-model=\"registerData.registrarId\" placeholder=\"Credencial Civica\">\n      <br>\n      <input type=\"text\" v-model=\"registerData.firstName\" placeholder=\"Nombre\">\n      <br>\n      <input type=\"text\" v-model=\"registerData.lastName\" placeholder=\"Apellido\">\n      <br>\n      <input type=\"submit\" value=\"Registrarse\">\n    </form>\n    <br>\n    <span v-if=\"registerReponse\">\n      <b>{{ registerReponse.data }}</b>\n    </span>\n    <br>\n    <vue-instant-loading-spinner id='loader' ref=\"Spinner\"></vue-instant-loading-spinner>\n  </div>\n</template>\n\n<script>\nimport PostsService from \"@/services/apiService\";\nimport VueInstantLoadingSpinner from \"vue-instant-loading-spinner/src/components/VueInstantLoadingSpinner.vue\";\n\nexport default {\n  name: \"response\",\n  data() {\n    return {\n      loginData: {},\n      registerData: {},\n      registerReponse: {\n        data: \"\"\n      },\n      loginReponse: {\n        data: \"\"\n      }\n    };\n  },\n  components: {\n    VueInstantLoadingSpinner\n  },\n  methods: {\n    async registerVoter() {\n\n      await this.runSpinner();\n      const apiResponse = await PostsService.registerVoter(\n        this.registerData.voterId,\n        this.registerData.registrarId,\n        this.registerData.firstName,\n        this.registerData.lastName\n      );\n\n      console.log(apiResponse);\n      this.registerReponse = apiResponse;\n      await this.hideSpinner();\n    },\n\n    async validateVoter() {\n      await this.runSpinner();\n\n      if (!this.loginData.voterId) {\n        console.log(\"!thislogin\");\n        let response = 'Ingrese su ID de votante';\n        this.loginReponse.data = response;\n        await this.hideSpinner();\n      } else {\n        const apiResponse = await PostsService.validateVoter(\n          this.loginData.voterId\n        );\n        console.log(\"apiResponse\");\n        console.log(apiResponse.data);\n\n        if (apiResponse.data.error) {\n          console.log(apiResponse.data.error);\n          this.loginReponse = apiResponse.data.error;\n        } else {\n          this.$router.push(\"castBallot\");\n        }\n\n        console.log(apiResponse);\n        this.loginReponse = apiResponse;\n        await this.hideSpinner();\n      }\n    },\n    async runSpinner() {\n      this.$refs.Spinner.show();\n    },\n    async hideSpinner() {\n      this.$refs.Spinner.hide();\n    }\n  }\n};\n</script>\n"]}]}